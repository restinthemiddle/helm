namespace: default
applicationName: restinthemiddle

image:
  registry: docker.io
  repository: jdschulze/restinthemiddle
  pullPolicy: IfNotPresent
  tag: "2.0.0-alpha.12"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

config:
  exclude: ""             # Exclude requests that match this URL RegEx
  excludePostBody: ""     # Do not log the Request body if the URL path matches this RegEx
  excludeResponseBody: "" # Do not log the Response body if the URL path matches this RegEx
  headers: {}
  listenIp: 0.0.0.0       # Usually you shouldnâ€™t change this value
  listenPort: "8000"      # Non-privileged ports only! Use service.portOverride if you want to use a privileged port.
  logPostBody: true       # Log the Request body
  logResponseBody: true   # Log the Response body (if it is not chunked)
  loggingEnabled: true    # You know, for Logging
  setRequestId: false     # Add an X-Request-Id header if not already present
  targetHostDsn: https://username:password@example.com:4443/example/path

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
#  fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  # -- Use this only if you have to override config.listenPort because you want to use a privileged port.
  portOverride: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: restinthemiddle.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
#    - secretName: restinthemiddle-tls
#      hosts:
#        - restinthemiddle.local

# -- Adjust those values to your needs. These values are only suggestions!
resources:
  limits:
    cpu: 100m
    memory: 64Mi
  requests:
    cpu: 10m
    memory: 32Mi

autoscaling:
  # -- Handle with care! Autoscaling will make sense only if you have centralized logging.
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
#  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Leave this at 1 if you do not have centralized logging.
replicaCount: 1
